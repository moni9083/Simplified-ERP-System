{"ast":null,"code":"// // // OrdersCalendarView.js\n\n// // OrdersCalendarView.js\n\n// import React, { useState } from 'react';\n// import Calendar from 'react-calendar';\n// const OrdersCalendarView = () => {\n//   // Define your styles here\n//   const calendarContainerStyles = {\n//     fontFamily: 'Arial, sans-serif',\n//     backgroundColor: '#f5f5f5',\n//     padding: '20px',\n//     borderRadius: '8px',\n//     boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\n//     marginBottom: '20px',\n//     maxWidth: '100%', // Utilize full page width\n//   };\n\n//   const calendarStyles = {\n//     display: 'grid',\n//     gridTemplateColumns: 'repeat(7, 1fr)',\n//     gap: '10px',\n//   };\n\n//   const dateCellStyles = {\n//     padding: '10px',\n//     textAlign: 'center',\n//     cursor: 'pointer',\n//     borderRadius: '5px',\n//     transition: 'background-color 0.3s ease',\n//   };\n\n//   const selectedDateOrdersStyles = {\n//     backgroundColor: '#3498db',\n//     color: '#fff',\n//   };\n\n//   // Dummy data for demonstration\n//   const ordersData = [\n//     { id: 1, customerName: 'Customer 1', orderDate: '2022-03-10' },\n//     { id: 2, customerName: 'Customer 2', orderDate: '2022-03-12' },\n//     // Add more orders data\n//   ];\n\n//   const [selectedDate, setSelectedDate] = useState(null);\n\n//   const handleDateClick = (date) => {\n//     setSelectedDate(date);\n//   };\n\n//   return (\n//     <div style={calendarContainerStyles}>\n//       <h1>Orders Calendar View</h1>\n//       <div style={calendarStyles}>\n//         {/* Loop through dates and render date cells */}\n//         {/* For demonstration, let's assume you are working with March 2022 */}\n//         {Array.from({ length: 31 }, (_, index) => {\n//           const currentDate = new Date(2022, 2, index + 1); // Months are zero-based, so 2 represents March\n//           const isDateSelected = selectedDate && currentDate.toISOString().split('T')[0] === selectedDate;\n\n//           return (\n//             <div\n//               key={index}\n//               style={{\n//                 ...dateCellStyles,\n//                 backgroundColor: isDateSelected ? selectedDateOrdersStyles.backgroundColor : dateCellStyles.backgroundColor,\n//                 color: isDateSelected ? selectedDateOrdersStyles.color : dateCellStyles.color,\n//               }}\n//               onClick={() => handleDateClick(currentDate.toISOString().split('T')[0])}\n//             >\n//               {index + 1}\n//             </div>\n//           );\n//         })}\n//       </div>\n//       {/* Display orders for the selected date */}\n//       {selectedDate && (\n//         <div style={selectedDateOrdersStyles}>\n//           <h2>Orders for {selectedDate}</h2>\n//           <ul>\n//             {ordersData\n//               .filter((order) => order.orderDate === selectedDate)\n//               .map((order) => (\n//                 <li key={order.id}>{order.customerName}</li>\n//               ))}\n//           </ul>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// const getStatusColor = (status) => {\n//   switch (status) {\n//     case 'Processing':\n//       return '#3498db'; // Blue\n//     case 'Shipped':\n//       return '#f39c12'; // Orange\n//     case 'Delivered':\n//       return '#2ecc71'; // Green\n//     default:\n//       return '#333'; // Default color\n//   }\n// };\n\n// export default OrdersCalendarView;\n\n// import React, { useState } from 'react';\n// import Calendar from 'react-calendar';\n\n// const OrdersCalendarView = () => {\n//   const [selectedDate, setSelectedDate] = useState(new Date());\n\n//   const handleDateChange = (date) => {\n//     setSelectedDate(date);\n//     // Add logic to fetch and display orders for the selected date\n//     // You can use state or a context API to manage orders data\n//   };\n\n//   return (\n//     <div style={calendarContainerStyles}>\n//       <h2>Orders Calendar View</h2>\n//       <Calendar onChange={handleDateChange} value={selectedDate} />\n//       {/* Add logic to display orders for the selected date */}\n//       {/* You can use a separate component for displaying orders */}\n//     </div>\n//   );\n// };\n\n// // Styles for the calendar\n// const calendarContainerStyles = {\n//   maxWidth: '600px',\n//   margin: 'auto',\n//   padding: '20px',\n// };\n\n// export default OrdersCalendarView;","map":{"version":3,"names":[],"sources":["C:/Users/monis/Downloads/erp/erp/src/OrdersCalendarView.js"],"sourcesContent":["// // // OrdersCalendarView.js\n\n// // OrdersCalendarView.js\n\n// import React, { useState } from 'react';\n// import Calendar from 'react-calendar';\n// const OrdersCalendarView = () => {\n//   // Define your styles here\n//   const calendarContainerStyles = {\n//     fontFamily: 'Arial, sans-serif',\n//     backgroundColor: '#f5f5f5',\n//     padding: '20px',\n//     borderRadius: '8px',\n//     boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\n//     marginBottom: '20px',\n//     maxWidth: '100%', // Utilize full page width\n//   };\n\n//   const calendarStyles = {\n//     display: 'grid',\n//     gridTemplateColumns: 'repeat(7, 1fr)',\n//     gap: '10px',\n//   };\n\n//   const dateCellStyles = {\n//     padding: '10px',\n//     textAlign: 'center',\n//     cursor: 'pointer',\n//     borderRadius: '5px',\n//     transition: 'background-color 0.3s ease',\n//   };\n\n//   const selectedDateOrdersStyles = {\n//     backgroundColor: '#3498db',\n//     color: '#fff',\n//   };\n\n//   // Dummy data for demonstration\n//   const ordersData = [\n//     { id: 1, customerName: 'Customer 1', orderDate: '2022-03-10' },\n//     { id: 2, customerName: 'Customer 2', orderDate: '2022-03-12' },\n//     // Add more orders data\n//   ];\n\n//   const [selectedDate, setSelectedDate] = useState(null);\n\n//   const handleDateClick = (date) => {\n//     setSelectedDate(date);\n//   };\n\n//   return (\n//     <div style={calendarContainerStyles}>\n//       <h1>Orders Calendar View</h1>\n//       <div style={calendarStyles}>\n//         {/* Loop through dates and render date cells */}\n//         {/* For demonstration, let's assume you are working with March 2022 */}\n//         {Array.from({ length: 31 }, (_, index) => {\n//           const currentDate = new Date(2022, 2, index + 1); // Months are zero-based, so 2 represents March\n//           const isDateSelected = selectedDate && currentDate.toISOString().split('T')[0] === selectedDate;\n\n//           return (\n//             <div\n//               key={index}\n//               style={{\n//                 ...dateCellStyles,\n//                 backgroundColor: isDateSelected ? selectedDateOrdersStyles.backgroundColor : dateCellStyles.backgroundColor,\n//                 color: isDateSelected ? selectedDateOrdersStyles.color : dateCellStyles.color,\n//               }}\n//               onClick={() => handleDateClick(currentDate.toISOString().split('T')[0])}\n//             >\n//               {index + 1}\n//             </div>\n//           );\n//         })}\n//       </div>\n//       {/* Display orders for the selected date */}\n//       {selectedDate && (\n//         <div style={selectedDateOrdersStyles}>\n//           <h2>Orders for {selectedDate}</h2>\n//           <ul>\n//             {ordersData\n//               .filter((order) => order.orderDate === selectedDate)\n//               .map((order) => (\n//                 <li key={order.id}>{order.customerName}</li>\n//               ))}\n//           </ul>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n\n// const getStatusColor = (status) => {\n//   switch (status) {\n//     case 'Processing':\n//       return '#3498db'; // Blue\n//     case 'Shipped':\n//       return '#f39c12'; // Orange\n//     case 'Delivered':\n//       return '#2ecc71'; // Green\n//     default:\n//       return '#333'; // Default color\n//   }\n// };\n\n// export default OrdersCalendarView;\n\n\n\n// import React, { useState } from 'react';\n// import Calendar from 'react-calendar';\n\n// const OrdersCalendarView = () => {\n//   const [selectedDate, setSelectedDate] = useState(new Date());\n\n//   const handleDateChange = (date) => {\n//     setSelectedDate(date);\n//     // Add logic to fetch and display orders for the selected date\n//     // You can use state or a context API to manage orders data\n//   };\n\n//   return (\n//     <div style={calendarContainerStyles}>\n//       <h2>Orders Calendar View</h2>\n//       <Calendar onChange={handleDateChange} value={selectedDate} />\n//       {/* Add logic to display orders for the selected date */}\n//       {/* You can use a separate component for displaying orders */}\n//     </div>\n//   );\n// };\n\n// // Styles for the calendar\n// const calendarContainerStyles = {\n//   maxWidth: '600px',\n//   margin: 'auto',\n//   padding: '20px',\n// };\n\n// export default OrdersCalendarView;\n\n\n\n\n\n\n\n"],"mappings":"AAAA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}